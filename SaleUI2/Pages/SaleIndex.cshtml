@page
@using SaleUI2.Models
@model SaleUI2.Pages.SaleIndexModel
@{
    ViewData["Title"] = "SaleIndex";
}

<h2>SaleIndex</h2>

<form method="POST">
    @if (!String.IsNullOrEmpty(Model.SaleEntry.Id))
    {
        <div class="row">
            <div class="col-md-4">
                <label asp-for="SaleEntry.Id"></label>
                <input readonly asp-for="SaleEntry.Id" class="form-control"/>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-md-4">
            <label asp-for="SaleEntry.ProductSKU"></label>
            <input asp-for="SaleEntry.ProductSKU" class="form-control"/>
            <span class="alert-danger" asp-validation-for="SaleEntry.ProductSKU"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label asp-for="SaleEntry.ProductName"></label>
            <input asp-for="SaleEntry.ProductName" class="form-control"/>
            <span class="alert-danger" asp-validation-for="SaleEntry.ProductName"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label asp-for="SaleEntry.ProductDescription"></label>
            <input asp-for="SaleEntry.ProductDescription" class="form-control"/>
            <span class="alert-danger" asp-validation-for="SaleEntry.ProductSKU"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label asp-for="SaleEntry.ProductPrice"></label>
            <input asp-for="SaleEntry.ProductPrice" class="form-control"/>
            <span class="alert-danger" asp-validation-for="SaleEntry.ProductPrice"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label asp-for="SaleEntry.Quantity"></label>
            <input asp-for="SaleEntry.Quantity" class="form-control"/>
            <span class="alert-danger" asp-validation-for="SaleEntry.ProductSKU"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label asp-for="SaleEntry.Branch"></label>
            <input asp-for="SaleEntry.Branch" class="form-control"/>
            <span class="alert-danger" asp-validation-for="SaleEntry.Branch"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label asp-for="SaleEntry.SoldBy"></label>
            <input asp-for="SaleEntry.SoldBy" class="form-control"/>
            <span class="alert-danger" asp-validation-for="SaleEntry.SoldBy"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label asp-for="SaleEntry.SaleDate"></label>
            <input asp-for="SaleEntry.SaleDate" class="form-control"/>
            <span class="alert-danger" asp-validation-for="SaleEntry.SaleDate"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label asp-for="SaleEntry.EncodedBy"></label>
            <input asp-for="SaleEntry.EncodedBy" class="form-control"/>
            <span class="alert-danger" asp-validation-for="SaleEntry.EncodedBy"></span>
        </div>
    </div>
    <br/>
    
    
    
@if (String.IsNullOrEmpty(Model.SaleEntry.Id))
{
    <input type="submit" value="Save" class="btn btn-primary" />
    <button class="btn btn-danger" href="~/SaleItem">Cancel</button>
}
else
{
    <button type="submit" class="btn btn-warning" asp-page-handler="update">Update</button>
    <button class="btn btn-info" href="~/SaleItem">Add New Sale >></button>
}
</form>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
